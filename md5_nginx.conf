#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '"$status" $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$http_imei" '
                      '"$http_userid" "$http_ch" "$http_ver" "$http_p" '
              '"$http_analyze" "$http_token" "$http_cookie"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    
     #add perl module
    perl_set $realurl '
    use nginx;
    use strict;
    use Digest::MD5 qw(md5_hex);
    use Log::Log4perl;

    #init logger
    Log::Log4perl->init("/log/log4perl.conf");

    sub {
        #init logger
        my $logger = Log::Log4perl->get_logger();

        #my $error_json_url = "mapi/404.html";
        my $sp_version = 270;
        my $al_version = 270;
        my $api = "/mapi";
        my %url_hash = (
            $api."/userbuyinfo" => "",
            $api."/couponGroup" => "",
            $api."/coupons" => "",
            $api."/activateCoupon" => "",
            $api."/queryGiftCardStatus" => "",
            $api."/orderList" => "",
            $api."/orderDetail" => "",
            $api."/confirmSettlement" => "",
            $api."/updateconfirmorderinfo" => "",
            $api."/submitOrder" => "",
            $api."/payOrderNew" => "",
            $api."/modifyPayOrder" => "",
            $api."/getaddr" => "",
            $api."/editaddr" => "",
            #$api."/checkUser" => "",
            $api."/sendsmscode" => "",
            $api."/verifysmscode" => "",
            $api."/setGiftCartPwd" => "",
            $api."/cardRecharge" => "",
            $api."/apiv2/giftCardRecordList" => "",
            $api."/apiv2/giftCardBuy" => "",
            $api."/apiv2/giftCardElectronicRecharge" => "",
            $api."/apiv2/giftCardRechargePasswd" => "",
            $api."/payGiftCardNew" => "",
            $api."/buyNow" => "",
            $api."/modifyOrderInfo" => ""
        );
        my $r = shift;
        my $p = $r->header_in("p");
        my $ver = $r->header_in("ver");
        my $userid = $r->header_in("userid");
        my $sign = $r->header_in("sign");
        my $current_url = $r->uri;
        my $request = $r->args;

        #if ($ver eq "") {
        #   return "/404.html";
        #}

        $logger->debug("p:".$p.",ver:".$ver.",userid:".$userid.",sign:".$sign.",current_url:".$current_url.",request:".$request);

        #my $url_head = "";
        #if($current_url =~ /^\/(.+?)\/.*?$/){
        #   $url_head = $1;
        #}
        #$logger->debug("url_head:".$url_head);

        #compare current_url url
        if(!exists($url_hash{$current_url})) {
            $logger->debug("!exists:".$current_url);
            return $current_url."?".$request;
        }

        #compare p and ver
        my $version = 0;
        if ($p eq "2") {
            $version = $sp_version;
        } elsif ($p eq "102") {
            $version = $al_version;
        }
        print "version:".$version."\n";
        $ver =~ s/\.//g;
        $logger->debug("version:".$version.",ver:".$ver);
        if ($ver < $version) {
            $logger->debug("ver < version");
            return $current_url."?".$request;
        }
        $logger->debug("version < ver");

        my @querys = split(/&/, $request);
        my %query_hash;
        foreach my $query (@querys) {
            if($query =~ /^(.+?)=(.+?)$/){
                $query_hash{$1} = $2;
            }
        }

        my $request_sort = "";
        my $i = 0;
        my @sort_values = sort(keys %query_hash);
        foreach my $key (@sort_values) {
            if ($i != 0) {
                $request_sort .= "&";
            }
            my $value = $query_hash{$key};
            $request_sort .= $key."=".$value;
            $i++;
        }
        if(length($request_sort) > 0){
            $request_sort .= "&";
        }
        $request_sort .= "signKey=".$userid;

        $logger->debug("md5 url : ".$request_sort);
        my $md5result = md5_hex($request_sort);
        $logger->debug("md5result : ".$md5result);
        if($md5result eq $sign) {
            $logger->debug("sign true : ".$current_url."?".$request);
            return $current_url."?".$request;
        } else {
            $logger->debug("sign false : ".$current_url."?".$request);
            return "/404.html";
        }
    }';

    server {
        listen       80;
        server_name  localhost;
    include /usr/local/nginx/conf/rewrite.conf;
        #server_name  test.mobile.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }
    
    #shangpin
        location /mshangpin {
            proxy_pass http://mshangpin;
        access_log  logs/mshangpin.access.log  main;
        }
    #maolai
        location /maolai {
            proxy_pass http://maolai;
        access_log  logs/maolai.access.log  main;
        }

    #mapi
        location /mapi {
            proxy_pass http://mapi$realurl;
            access_log  logs/mapi.access.log  main;
        }

    #apiv2
        location /mapi/apiv2 {
            proxy_pass http://apiv2$realurl;
            access_log  logs/mapi.access.log  main;
        }

    #mmanager
        location /manager {
            proxy_pass http://manager;
        access_log  logs/manager.access.log  main;
        }
    
    #promo
        location /promo {
            proxy_pass http://promo;
        access_log  logs/promo.access.log  main;
        }

        #location /mshangpin/login {
        #       return 302 https://192.168.20.196/mshangpin/login;
    #   access_log  logs/ssl.access.log  main;
        #}

        #location /mapi/login {
        #        return 302 https://192.168.20.196/mapi/login;
        #        access_log  logs/ssl.access.log  main;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    
    }
    
    server {
        listen       9999;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/maolai.access.log  main;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_hide_header Vary;
        proxy_hide_header X-AspNet-Version;
        proxy_hide_header X-AspNetMvc-Version;
        proxy_hide_header X-Powered-By;
        proxy_pass_header Set-Cookie;

        location / {
            root   html;
            index  index.html index.htm;
    }
    
    #shangpin
        location /mshangpin {
            proxy_pass http://mshangpin;
        }
        
    #maolai
        location /maolai {
            proxy_pass http://maolai;
        }
    
    #apiv2  
    location /mapi/apiv2 {
            proxy_pass http://apiv2;
        }

    #mapi
        location /mapi {
            proxy_pass http://mapi;
        }
    
    #mmanager
        location /manager {
            proxy_pass http://manager;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        
    }
    server {
        listen       80;
        server_name  wiki.sp.cn;

        location /
        {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                proxy_connect_timeout 30;
                proxy_send_timeout 30;
                proxy_read_timeout 60;

                proxy_buffer_size 64k;
                proxy_buffers   32 32k;
                proxy_busy_buffers_size 128k;

                proxy_hide_header Vary;
                proxy_hide_header X-AspNet-Version;
                proxy_hide_header X-AspNetMvc-Version;
                proxy_hide_header X-Powered-By;
                proxy_pass_header Set-Cookie;

                proxy_pass http://wiki_sp_cn;
        }

   }

    upstream mshangpin {
        server  192.168.20.78:8080  weight=1 max_fails=2 fail_timeout=30s;
    }
    
    upstream maolai {
        server  192.168.20.79:8081  weight=1 max_fails=2 fail_timeout=30s;
    }
    
    upstream manager {
        server  192.168.20.80:8084  weight=1 max_fails=2 fail_timeout=30s;
    }
    
    upstream mapi {
        server  192.168.20.81:8083  weight=1 max_fails=2 fail_timeout=30s;
    }

    upstream apiv2 {
        server  192.168.20.100:8083  weight=1 max_fails=2 fail_timeout=30s;
    }
    
    upstream promo {
        server  192.168.20.101:9090  weight=1 max_fails=2 fail_timeout=30s;
    }

    upstream wiki_sp_cn {
        server  192.168.1.110:7777  weight=1 max_fails=2 fail_timeout=30s;
    }
    upstream ssl {
        server  192.168.20.196:443  weight=1 max_fails=2 fail_timeout=30s;
    }
}